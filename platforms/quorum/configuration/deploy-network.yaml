##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This playbook deploys a DLT network on existing Kubernetes clusters
# The Kubernetes clusters should already be created and the infomation to connect to the
#  clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
#  ansible-playbook deploy-network.yaml -e "@./network.yaml"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run using the same network.yaml
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  # delete build directory
  - name: Remove build directory
    file:
      path: "./build"
      state: absent

  # create namespace, service account and clusterrolebinding
  - name: "Create namespace and service account"
    include_role:
      name: create/namespace_serviceaccount
    vars:
      component_ns: "{{ item.name | lower }}-quo"
      organisation: "{{ item.name | lower }}"
      kubernetes: "{{ item.k8s }}"
      gitops: "{{ item.gitops }}"
    loop: "{{ network['organizations'] }}"

  # Create Storageclass
  - name: Create Storage Class
    include_role:
      name: create/storageclass
    vars:
      storageclass_name: "{{ item.cloud_provider }}storageclass"
      git_dir: "{{ item.gitops.release_dir }}"
      org: "{{ item }}"
      kubernetes: "{{ item.k8s }}"
    loop: "{{ network['organizations'] }}"

  # Setup Vault-Kubernetes accesses and Regcred for docker registry
  - name: "Setup vault"
    include_role:
      name: "{{ playbook_dir }}/../../shared/configuration/roles/setup/vault_kubernetes"
    vars:
      policy_type: "quorum"
      name: "{{ item.name | lower }}"
      component_ns: "{{ item.name | lower }}-quo"
      component_name: "{{ item.name | lower }}-vaultk8s-job"
      component_auth: "quorum{{ item.name | lower }}"
      component_type: "organization"
      kubernetes: "{{ item.k8s }}"
      vault: "{{ item.vault }}"
      gitops: "{{ item.gitops }}"
      reset_path: "platforms/quorum/configuration"
    loop: "{{ network['organizations'] }}"

  # # Generate Ambassador certificate for nodes
  # - name: "Create ambassador certificates for Nodes"
  #   include_role:
  #     name: create/certificates/ambassador
  #   vars:
  #     gitops: "{{ org.gitops }}"
  #     component_auth: "quorum{{ org.name | lower }}"
  #     component_ns: "{{ org.name | lower }}-quo"
  #     charts_dir: "{{ org.gitops.chart_source }}"
  #     component_name: "{{ org.name | lower }}-ambassador-certs"
  #     kubernetes: "{{ org.k8s }}"
  #     values_dir: "{{ playbook_dir }}/../../../{{ org.gitops.release_dir }}"
  #     vault: "{{ org.vault }}"
  #     peers: "{{ org.services.peers }}"
  #   loop: "{{ network['organizations'] }}"
  #   loop_control:
  #     loop_var: org

# m

  vars: #These variables can be overriden from the command line
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"            #Default to /bin install directory for binaries
    add_new_org: false
