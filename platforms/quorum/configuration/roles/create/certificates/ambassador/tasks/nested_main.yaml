##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This role generates certificates for rootca and ambassador
# and places them in vault. Certificates are created using openssl

---
# Ensures the rootca dir directory
- name: "Ensure rootca dir exists"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    path: "{{ rootca }}"
    check: "ensure_dir"

# Ensures the ambassador tls directory
- name: "Ensure ambassadortls dir exists"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
  vars:
    path: "{{ ambassadortls }}"
    check: "ensure_dir"

# Check if Ambassador credentials exist already
- name: Check Ambassador cred exists
  k8s_info:
    kind: Secret
    namespace: "{{ component_ns }}"
    name: "{{ node_name }}-ambassador-certs"
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
  register: get_ambassador_secret

# This task creates the Ambassador TLS credentials for ambassador
- name: Create the Ambassador credentials
  shell: |
    KUBECONFIG={{ kubernetes.config_file }} kubectl create secret tls {{ node_name }}-ambassador-certs --cert={{ ambassadortls }}/{{ node_name }}-certchain.pem --key={{ ambassadortls }}/{{node_name}}.key -n {{ component_ns }}
  when: get_ambassador_secret.resources|length == 0

# This task creates the Quorum value files for each node of organization
- name: Create value file for ambassador job
  include_role:
    name: helm_component
  vars:
    component_name: "{{ name }}{{ peer.name }}quorum"
    type: "certs-ambassador-quorum"
    genesis: "{{ lookup('file', '{{ network.config.genesis }}') | b64encode }}"
    staticnodes: "{{ lookup('file', '{{ network.config.staticnodes }}') | from_yaml | to_nice_json }}"
  loop: "{{ peers }}"
  loop_control:
    loop_var: peer

    
# Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ item.gitops }}"
    GIT_RESET_PATH: "platforms/quorum/configuration"
    msg: "[ci skip] Pushing Peer files"
  tags:
    - notest
